{"version":3,"sources":["webpack/bootstrap 2fba36ff8f81417e3a5b","./apex.js","./lib/game_view.js","./lib/game.js","./lib/life_form.js","./lib/moving_object.js","./lib/utils.js","./lib/player.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;;;;;;AC/BA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,OAAO;AAC3B;AACA,MAAK;AACL;AACA,qBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA,mBAAkB,wCAAwC;AAC1D,mBAAkB,uCAAuC;AACzD,mBAAkB,wCAAwC;AAC1D,mBAAkB,uCAAuC;;AAEzD,oBAAmB,wCAAwC;AAC3D,sBAAqB,uCAAuC;AAC5D,sBAAqB,wCAAwC;AAC7D,uBAAsB,uCAAuC;;AAE7D,uBAAsB,MAAM;AAC5B;AACA;;AAEA;;;;;;;AC7DA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B,mDAAmD;AACjF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;;AAEA;AACA,oCAAmC,uCAAuC;AAC1E;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA,oBAAmB,wBAAwB;AAC3C,0BAAyB,oBAAoB;AAC7C;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACtIA;AACA;;;AAGA;AACA,2BAA0B;AAC1B;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;;;;;;ACfA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;;;;;;;AC3GA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACrCA;AACA;;AAEA;AACA,2BAA0B;AAC1B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,kCAAiC,+BAA+B;;AAEhE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 2fba36ff8f81417e3a5b\n **/","const GameView = require('./lib/game_view');\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n  key('space', ()=>{\n    let $body = $(\"body\");\n    let startEl = $(\".start\");\n    startEl.remove();\n\n    startGame($body.height(), $body.width());\n  });\n\n});\n\nconst startGame = function(height, width){\n  console.log(\"start\");\n  $(\".game\").append(\"<canvas id='canvas'></canvas>\");\n  let canvas = document.getElementById(\"canvas\");\n  let ctx = canvas.getContext(\"2d\");\n  let gameOptions = {ctx: ctx, height: height, width: width};\n  let gameView = new GameView(gameOptions);\n  canvas.width = gameView.game.DIM_X;\n  canvas.height = gameView.game.DIM_Y;\n  window.width = gameView.game.DIM_X;\n  window.height = gameView.game.DIM_Y;\n  canvas.style.backgroundColor = \"white\";\n  gameView.start(restart);\n};\n\nconst restart = function(){\n  \n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./apex.js\n ** module id = 1\n ** module chunks = 0\n **/","const Game = require('./game');\n\nclass GameView {\n  constructor(options) {\n    this.game = new Game(options.height, options.width);\n    this.ctx = options.ctx;\n    this.ACCELERATION = 0.5;\n  }\n\n  start(restart) {\n    let gameView = this;\n    gameView.bindKeyHandlers(this.game.player);\n\n    let interval = setInterval( function() {\n\n      if (gameView.game.over()){\n        gameView.endGame(interval, restart);\n      }\n      gameView.game.step();\n      gameView.game.draw(gameView.ctx);\n    }, 20);\n  }\n\n  endGame(interval, restart){\n    clearInterval(interval);\n    let $canvas = $(\"#canvas\");\n    $canvas.remove();\n    if (this.game.won()){\n      $(\"body\").append(\n      `<div class=${\"over\"}><h1>YOU ARE THE APEX PREDATOR</h1><h2>Press spacebar to play again</h2></div>`\n      );\n    } else {\n      $(\"body\").append(\n      `<div class=${\"over\"}><h1>GAME OVER</h1><h2>Press spacebar to play again</h2></div>`\n      );\n    }\n    this.playAgain(restart);\n  }\n\n  playAgain(restart){\n    key('space', ()=>{\n      $(\".over\").remove();\n      restart();\n    });\n  }\n\n  bindKeyHandlers(player){\n    key('w', ()=>{player.power([0,-(this.ACCELERATION)]);});\n    key('s', ()=>{player.power([0,(this.ACCELERATION)]);});\n    key('a', ()=>{player.power([-(this.ACCELERATION),0]);});\n    key('d', ()=>{player.power([(this.ACCELERATION),0]);});\n\n    key('up', ()=>{player.power([0,-(this.ACCELERATION)]);});\n    key('down', ()=>{player.power([0,(this.ACCELERATION)]);});\n    key('left', ()=>{player.power([-(this.ACCELERATION),0]);});\n    key('right', ()=>{player.power([(this.ACCELERATION),0]);});\n\n    key('space', ()=>{null;});\n  }\n}\n\nmodule.exports = GameView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game_view.js\n ** module id = 2\n ** module chunks = 0\n **/","const LifeForm = require('./life_form');\nconst Util = require('./utils');\nconst Player = require('./player');\n\n\nclass Game {\n  constructor(height, width){\n    this.DIM_X = width;\n    this.DIM_Y = height;\n    this.NUM_LIFE_FORMS = 400;\n    this.MAX_LIFE_RADIUS = Util.MAX_LIFE_RADIUS;\n    this.lifeForms = this.addLifeForms();\n    this.player = new Player({pos: [this.DIM_X / 2, this.DIM_Y / 2], game: this });\n    this.lifeForms = this.lifeForms.concat([this.player]);\n  }\n\n  allObjects() {\n    return this.lifeForms;\n  }\n\n  addLifeForms() {\n    let lifeForms = [];\n    let num;\n    if (this.DIM_X < 1000 || this.DIM_Y < 600) {\n      num = 300;\n    } else if (this.DIM_X < 800 || this.DIM_Y < 400 ) {\n      num = 250;\n    } else {\n      num = this.NUM_LIFE_FORMS;\n    }\n    for (let i=0; i < num; i++) {\n      let rad;\n      if (i < 250) {\n        rad = Util.randomRadius(1,5);\n      } else if (250 <= i && i < 350) {\n        rad = Util.randomRadius(5,10);\n      } else if (350 <= i && i < 388) {\n        rad = Util.randomRadius(10,15);\n      } else if (388 <= i && i < 394) {\n        rad = Util.randomRadius(15,20);\n      } else if (394 <= i && i < 396) {\n        rad = 30;\n      } else if (396 <= i && i < 398) {\n        rad = 35;\n      } else if (398 <= i && i < 399) {\n        rad = 40;\n      } else if (i === 399){\n        rad = 50;\n      }\n\n      let position = this.getRandomPosition(rad);\n      let lifeForm = new LifeForm({radius: rad, pos: position, game: this});\n      lifeForms.push(lifeForm);\n    }\n\n    return lifeForms;\n  }\n\n  getRandomPosition(rad) {\n    function getRandomNum(min, max) {\n      return Math.random() * (max - min) + min;\n    }\n    rad *= 4;\n    let xRange = [(this.DIM_X / 2) - rad, (this.DIM_X / 2) + rad];\n    let yRange = [(this.DIM_Y / 2) - rad, (this.DIM_Y / 2) + rad];\n\n    let x;\n    let y;\n    do {\n      x = getRandomNum(0 + this.MAX_LIFE_RADIUS, this.DIM_X - this.MAX_LIFE_RADIUS);\n      y = getRandomNum(0 + this.MAX_LIFE_RADIUS, this.DIM_Y - this.MAX_LIFE_RADIUS);\n    } while ((x > xRange[0] && x < xRange[1]) && (y > yRange[0] && y < yRange[1]));\n\n    return [x,y];\n  }\n\n  draw(ctx) {\n    ctx.clearRect(0, 0, this.DIM_X, this.DIM_Y);\n    this.allObjects().forEach(function(lifeForm) {\n      lifeForm.draw(ctx);\n    });\n  }\n\n  moveObjects() {\n    this.allObjects().forEach( function(lifeForm) {\n      lifeForm.move();\n    });\n  }\n\n  checkCollisions() {\n    let objects = this.allObjects();\n    for (let i = 0; i < objects.length - 1; i++){\n      for (let j = i + 1; j < objects.length; j++){\n        let lifeForm1 = objects[i];\n        let lifeForm2 = objects[j];\n        if (lifeForm1 === lifeForm2) {\n          return;\n        } else {\n          if (lifeForm1.isCollidedWith(lifeForm2)) {\n            lifeForm1.collideWith(lifeForm2);\n          }\n        }\n      }\n    }\n  }\n\n  step() {\n    this.moveObjects();\n    this.checkCollisions();\n  }\n\n  over(){\n    let over = false;\n    if (this.playerDead() || this.won()){\n      over = true;\n    }\n    return over;\n  }\n\n  playerDead(){\n    return !!(this.player.radius <= 0.5);\n  }\n\n  won(){\n    return !!(this.lifeForms.length <= 1);\n  }\n\n  remove(lifeForm){\n\n    let index = this.lifeForms.indexOf(lifeForm);\n    this.lifeForms.splice(index, 1);\n  }\n}\n\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game.js\n ** module id = 3\n ** module chunks = 0\n **/","const MovingObject = require('./moving_object');\nconst Util = require('./utils');\n\n\nclass LifeForm extends MovingObject {\n  constructor(options = {}){\n    options.color = \"black\";\n    // options.radius = Util.randomRadius();\n    options.vel = Util.randomVec(0.05);\n\n    super(options);\n  }\n\n}\n\nmodule.exports = LifeForm;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/life_form.js\n ** module id = 4\n ** module chunks = 0\n **/","const Util = require('./utils');\n\nclass MovingObject {\n  constructor(options){\n    this.pos = options['pos'];\n    this.vel = options['vel'];\n    this.radius = options['radius'];\n    this.color = options['color'];\n    this.game = options['game'];\n  }\n\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n\n    ctx.arc(\n      this.pos[0],\n      this.pos[1],\n      this.radius,\n      0,\n      2 * Math.PI,\n      false\n    );\n\n    ctx.fill();\n  }\n\n  move() {\n    this.pos[0] += this.vel[0];\n    this.pos[1] += this.vel[1];\n\n    if (this.radius >= 300) {\n      this.oversize(this.pos);\n    } else {\n      this.checkBorder(this.pos);\n    }\n\n    this.checkSize();\n  }\n\n  checkSize(){\n    if(this.radius > 400){\n      this.radius = 400;\n    }\n  }\n\n  checkBorder(pos){\n    if ((pos[0] - this.radius) < 0){\n      this.vel[0] = this.vel[0] * -1;\n      this.pos[0] = 0 + this.radius;\n    } else if ((pos[0] + this.radius) > this.game.DIM_X) {\n      this.vel[0] = this.vel[0] * -1;\n      this.pos[0] = this.game.DIM_X - this.radius;\n    } else if ((pos[1] - this.radius) < 0){\n      this.vel[1] = this.vel[1] * -1;\n      this.pos[1] = 0 + this.radius;\n    } else if ((pos[1] + this.radius) > this.game.DIM_Y) {\n      this.vel[1] = this.vel[1] * -1;\n      this.pos[1] = this.game.DIM_Y - this.radius;\n    }\n  }\n\n  oversize(pos){\n    if ((pos[0] - this.radius) < 0){\n      this.vel[0] = this.vel[0] * -1;\n      this.pos[0] = 0 + this.radius;\n    } else if ((pos[0] + this.radius) > this.game.DIM_X) {\n      this.vel[0] = this.vel[0] * -1;\n      this.pos[0] = this.game.DIM_X - this.radius;\n    } else if ((pos[1] - this.radius) < 0){\n      this.pos[1] = 0 + this.radius;\n    } else if ((pos[1] + this.radius) > this.game.DIM_Y) {\n      this.pos[1] = 0 + this.radius;\n    }\n  }\n\n\n  isCollidedWith(otherObject) {\n    let pos1 = this.pos;\n    let pos2 = otherObject.pos;\n\n    let dist = Util.distance(pos1, pos2);\n\n    if (dist < (this.radius + otherObject.radius)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  collideWith(otherObject) {\n\n    if (this.radius >= otherObject.radius) {\n      this.radius = this.radius + Util.GROWTH_RATE;\n      otherObject.radius = otherObject.radius - Util.ABSORB_RATE;\n    } else if (this.radius < otherObject.radius) {\n      this.radius = this.radius - Util.ABSORB_RATE;\n      otherObject.radius = otherObject.radius + Util.GROWTH_RATE;\n    }\n\n    if (this.radius <= 0.5) {\n      this.game.remove(this);\n    } else if (otherObject.radius <= 0.5) {\n      this.game.remove(otherObject);\n    }\n  }\n}\n\nmodule.exports = MovingObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/moving_object.js\n ** module id = 5\n ** module chunks = 0\n **/","\nconst Util = {\n  MAX_LIFE_RADIUS: 1,\n  MIN_LIFE_RADIUS: 20,\n  ABSORB_RATE: 2.25,\n  GROWTH_RATE: 0.65,\n\n\n  getRandomNum(min, max) {\n    return Math.random() * (max - min) + min;\n  },\n\n  randomVec(length) {\n    let dx = this.getRandomNum((-1 * length), length);\n    let dy = Math.sqrt(Math.pow(length,2) - Math.pow(dx, 2));\n    let arr = [-1,1];\n    let multiplier = arr[Math.floor(Math.random()*arr.length)];\n    dy = dy * multiplier;\n\n    return [dx, dy];\n  },\n\n  randomRadius(min, max){\n    // const min = Math.ceil(1);\n    // const max = Math.floor(10);\n    // const min = Math.ceil(this.MIN_LIFE_RADIUS);\n    // const max = Math.floor(this.MAX_LIFE_RADIUS);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  },\n\n  distance(pos1, pos2){\n    return Math.sqrt(\n      Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2)\n    );\n  }\n};\n\nmodule.exports = Util;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/utils.js\n ** module id = 6\n ** module chunks = 0\n **/","const MovingObject = require('./moving_object');\nconst LifeForm = require('./life_form');\n\nclass Player extends MovingObject {\n  constructor(options = {}){\n    options.color = \"#C93200\";\n    options.radius = 4;\n    options.vel = [0,0];\n\n    super(options);\n  }\n\n  power(impulse){\n    const MAX_SPEED = 15;\n    // if ((impulse[0] > 0 && this.vel[0] < 0) || (impulse[0] < 0 && this.vel[0] > 0)) {\n    //   this.vel[0] = 0;\n    // } else if ((impulse[1] > 0 && this.vel[1] < 0) || (impulse[1] < 0 && this.vel[1] > 0)) {\n    //   this.vel[1] = 0;\n    // }\n    this.vel[0] += impulse[0];\n    this.vel[1] += impulse[1];\n\n    if (this.vel[0] > MAX_SPEED) {\n      this.vel[0] = MAX_SPEED;\n    } else if (this.vel[0] < -MAX_SPEED) {\n      this.vel[0] = -MAX_SPEED;\n    } else if (this.vel[1] > MAX_SPEED) {\n      this.vel[1] = MAX_SPEED;\n    } else if (this.vel[1] < -MAX_SPEED) {\n      this.vel[1] = -MAX_SPEED;\n    }\n\n    this.loseMass();\n\n  }\n\n  loseMass(){\n    this.radius *= 0.98;\n    let lostMass = this.radius * 0.1;\n    // let lostMass = Math.floor(this.radius * 0.05);\n    // lostMass = (lostMass === 0) ? 1 : lostMass;\n    let newVel = [this.vel[0] * -1, this.vel[1] * -1];\n    let position = this.determinePos();\n\n    // position[1] = (this.vel[1] < 0) ? this.pos[1] + this.radius : this.pos[1] - this.radius;\n\n    let lifeForm = new LifeForm({pos: position, game: this.game});\n\n    lifeForm.radius = lostMass;\n    lifeForm.vel = newVel;\n\n    this.game.lifeForms.push(lifeForm);\n  }\n\n  determinePos(){\n    let position = [0,0];\n    if (this.vel[0] < 0){\n      if (this.vel[1] < 0){\n        position[0] = this.pos[0] + (this.radius * 0.8);\n        position[1] = this.pos[1] + (this.radius * 0.8);\n      } else if (this.vel[1] > 0) {\n        position[0] = this.pos[0] + (this.radius * 0.8);\n        position[1] = this.pos[1] - (this.radius * 0.8);\n      } else {\n        position[0] = this.pos[0] + (this.radius * 1.1);\n        position[1] = this.pos[1];\n      }\n    } else if (this.vel[0] > 0) {\n      if (this.vel[1] < 0){\n        position[0] = this.pos[0] - (this.radius * 0.8);\n        position[1] = this.pos[1] + (this.radius * 0.8);\n      } else if (this.vel[1] > 0) {\n        position[0] = this.pos[0] - (this.radius * 0.8);\n        position[1] = this.pos[1] - (this.radius * 0.8);\n      } else {\n        position[0] = this.pos[0] - (this.radius * 1.1);\n        position[1] = this.pos[1];\n      }\n    } else {\n      position[0] = this.pos[0];\n      if (this.vel[1] < 0) {\n        position[1] = this.pos[1] + (this.radius * 1.1);\n      } else {\n        position[1] = this.pos[1] - (this.radius * 1.1);\n      }\n    }\n    return position;\n  }\n}\n\nmodule.exports = Player;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/player.js\n ** module id = 7\n ** module chunks = 0\n **/"],"sourceRoot":""}